package mergeSort;

public class Ms1 {
	
	public static void divide(int arr[], int si, int ei) {
		if(si >=  ei) {
			return;
		}
		
		int mid = si + (ei - si)/2;
		divide(arr, si, mid);
		divide(arr, mid+1, ei);
		conquer(arr, si, mid, ei);
	}
	
	public static void conquer(int arr[], int si, int mid, int ei) {
		int merger[] = new int[ei - si +1];
		
		int idx1 = si;                   // starting index for first array
		int idx2 = mid + 1;              // starting index for second array
		int i = 0;
		
		while(idx1 <= mid && idx2 <= ei) {
			if(arr[idx1] <= arr[idx2]) {
				merger[i++] = arr[idx1++];
			} else {
				merger[i++] = arr[idx2++];
			}
		}
		
		while(idx1 <=  mid) {
			merger[i++] = arr[idx1++];
		}
		
		while(idx2 <=  ei) {
			merger[i++] = arr[idx2++];
		}
		
		for(int k=0, j=si; k<merger.length; k++, j++) {
			arr[j] = merger[k];
		}
	}
	
	public static void main(String[] Args) {
		int arr[] = {6,3,9,5,2,8};
		int n = arr.length;
		
		divide(arr, 0, n-1);
		//print
		System.out.print("Sorted Array: ");
		for(int i=0; i<n; i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
	}

}
